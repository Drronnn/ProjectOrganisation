<Page x:Class="ProjectManagementWPF.View.AuthorizationPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ProjectManagementWPF.View"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:global="clr-namespace:ProjectManagementWPF"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="AuthorizationPage">

    <Page.Resources>
        <global:MyConverter x:Key="MyConverter"></global:MyConverter>
        
        <global:BoolToVisibility x:Key="BoolToVisibilityConverter"/>
        
        <global:NegateBoolToVisibility x:Key="NegateBoolToVisibilityConverter"/>

        <Style TargetType="Button" x:Key="SideMenuButton">
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <SkewTransform AngleX="-20"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="{x:Type Button}" >
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="MouseOverAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="#06e9d2" Duration="0:0:0.1" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="#111810" Duration="0:0:0.1"/>
                            </Storyboard>
                            <Storyboard x:Key="MouseOutAnimation" FillBehavior="Stop">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.1" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="#085857" Duration="0:0:0.1"/>
                            </Storyboard>
                            <Storyboard x:Key="MouseDownAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="#dfd828" Duration="0:0:0.1" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="Black" Duration="0:0:0.1"/>

                            </Storyboard>
                            <Storyboard x:Key="MouseUpAnimation">
                                <ColorAnimation Storyboard.TargetName="ButtonBorderColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.1" />
                                <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="#085857" Duration="0:0:0.1"/>
                            </Storyboard>
                        </ControlTemplate.Resources>


                        <Border x:Name="ButtonBorder" Tag="{TemplateBinding Tag}"  BorderBrush="Transparent" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush x:Name="ButtonBorderColor" Color="Transparent"></SolidColorBrush>
                            </Border.Background>
                            <StackPanel FlowDirection="LeftToRight" Orientation="Horizontal">
                                <Grid>
                                    <ContentPresenter TextBlock.FontSize="40" TextBlock.Foreground="#085857" TextBlock.FontWeight="DemiBold" TextBlock.FontStyle="Italic" x:Name="ContentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10, 10, 35, 10">
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <SkewTransform AngleX="20"/>
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Grid>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}" />
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseDownAnimation}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}"/>
                                </Trigger.ExitActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SkewedBorder" TargetType="Border">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#06e9d2" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>

        </Style>


    </Page.Resources>


    <Border>
        <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#111810" Offset="0.5" />
                <GradientStop Color="#085857" Offset="1" />
            </LinearGradientBrush>
        </Border.Background>
        <Grid>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0, 20, 0, 0">
                <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="10,20,10,100"
                        Foreground="#e0e938"
                        FontFamily="Bahnschrift"
                        FontSize="55"
                        FontStyle="Italic"
                        FontWeight="Bold">
                        KABAN</TextBlock>

                <Image Source="/ProjectManagementWPF;component/Source/boarPng.png" Width="60" Height="60" HorizontalAlignment="Center"
            VerticalAlignment="Center" Margin="10,20,0,100"/>


            </StackPanel>

            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                <Border Margin="10" Style="{StaticResource SkewedBorder}"  Background="#111810" BorderBrush="#e0e938"  Width="300" Height="50">
                    <StackPanel Orientation="Horizontal" MinWidth="300">
                        <materialDesign:PackIcon Kind="Person" Width="50" Height="50" VerticalAlignment="Center" Foreground="#06e9d2" />
                        <TextBox x:Name="LoginBox" FontSize="22" TextAlignment="Justify" MinWidth="230" Margin="5" MaxLength="18" Foreground="#e0e938"/>
                    </StackPanel>
                </Border>
                <Border Margin="10"  Background="#111810" BorderBrush="#e0e938" BorderThickness="2" Width="300" Height="50">
                    <StackPanel Orientation="Horizontal" MinWidth="300" >
                        <materialDesign:PackIcon Kind="Key" Width="40" Height="40" VerticalAlignment="Center" Foreground="#06e9d2" Margin="5"/>
                        <PasswordBox x:Name="PassBox" FontSize="22" MinWidth="230" Margin="5" MaxLength="18" Foreground="#e0e938"/>
                    </StackPanel>
                </Border>

                <Button Style="{StaticResource SideMenuButton}" Content="Войти" HorizontalAlignment="Center" Command="{Binding LogInCommand}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MyConverter}">
                            <Binding Path="Text" ElementName="LoginBox"/>
                            <Binding ElementName="PassBox"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </Grid>
    </Border>
</Page>
